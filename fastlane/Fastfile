fastlane_require "dotenv"

PACKAGE_NAME = "com.dhruvv.expensetracker"
FIREBASE_APP_ID = "1:952999116053:android:955fbc3286fd71b7793d1c"
KEYSTORE_PATH = nil
FIREBASE_KEYSTORE_PATH = nil
PLAYSTORE_KEY_PATH = nil
BUNDLE_FILE_PATH = nil
UPDATED_VERSION_CODE = nil

    # execute before all the block get executed
    before_all do
        Dotenv.overload ".env.secret"
        KEYSTORE_PATH = Dir.pwd + "/../certificates/expense_tracker.jks"
        FIREBASE_KEY_PATH  = Dir.pwd + "/../certificates/firebase-app-distribution-key.json"
        PLAYSTORE_KEY_PATH = Dir.pwd + "/../certificates/playstore-app-distribution-key.json"
        BUNDLE_FILE_PATH  =  "E:/LD/Android/ExpenseTracker/app/build/outputs/bundle/release/app-release.aab"
    end

    desc "Responsible for fetching version code from the google play console and incrementing the version code"
    private_lane :increment_version_code_in_project_gradle do
    # get the version code from the google play console
    version_code_from_play_store_strings = google_play_track_version_codes(
        package_name: PACKAGE_NAME,
        track: "internal",
        json_key: PLAYSTORE_KEY_PATH)
    version_code_from_play_store = version_code_from_play_store_strings[0].to_i
    UI.message "Version code fetched successfully: #{version_code_from_play_store_strings}"
    #increment version code
    UPDATED_VERSION_CODE = version_code_from_play_store + 1
    increment_version_code(
       gradle_file_path: Dir.pwd + "/../app/build.gradle.kts",
       version_code: UPDATED_VERSION_CODE.to_i
    )
    end

    desc "increment version code based on latest app distributed on firebase app distribution"
    lane :increment_version_code_firebase_app_distribution do
    latest_release = firebase_app_distribution_get_latest_release(
        app: FIREBASE_APP_ID,
        service_credentials_file: FIREBASE_KEY_PATH,
    )
    # Do something with the latest_release information (e.g., print version number)
    puts "Latest firebase release version: #{latest_release[:buildVersion]}"
    updated_version = latest_release[:buildVersion].to_i + 1

    puts "Updated release version: #{updated_version}"
    increment_version_code(
           gradle_file_path: Dir.pwd + "/../app/build.gradle.kts",
           version_code: updated_version
    )
    end

    desc "Run unit tests."
    lane :run_unit_tests do
      gradle(
        task: "connectedDebugAndroidTest"
      )
    end

    desc "Build the .aab file"
    private_lane :build do
      gradle(
        task: "bundle",
        build_type: "Release",
        properties: {
          "android.injected.signing.store.file" => KEYSTORE_PATH,
          "android.injected.signing.store.password" => ENV['KEYSTORE_PASSWORD'],
          "android.injected.signing.key.alias" => ENV['KEYSTORE_ALIAS'],
          "android.injected.signing.key.password" => ENV['KEYSTORE_PASSWORD'],
        }
      )
    end


    desc "Responsible for uploading .aab to Firebase app distribution."
    private_lane :distribute_to_firebase do
      firebase_app_distribution(
        app: FIREBASE_APP_ID,
        release_notes: "fixed NumberFormatException issue",
        android_artifact_type: "AAB",
        android_artifact_path: BUNDLE_FILE_PATH,
        service_credentials_file: FIREBASE_KEY_PATH,
        groups: "tester-team"
      )
    end

    desc "Responsible for testing, building and uploading bundle to firebase app distribution and playstore by calling other private lanes."
    lane :build_and_distribute do
      increment_version_code_firebase_app_distribution()
      run_unit_tests()
      build()
      distribute_to_firebase()
#       distribute_playstore()
    end